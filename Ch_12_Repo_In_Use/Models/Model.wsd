@startuml --
title Book Api

class Book{
    + Id:int
    + Title:string
    + Price:double
}
class DbContext

package Repositories {

    class RepositoryContext{
        + Books: DbSet<Book>
        --
        + RepositoryContext(options:DbContextOptions)
        + OnModelCreating(modelBuilder:ModelBuilder)
    }
    class BookRepository {
        - context:RepositoryContext
        --
        + GetAll():List<Book>
        + Get(id): Book?
        + Add(item:Book):void
        + Remove(item:Book)
        + Update(item Book)
    }


}

package Abstracts{
    interface IBookService{
        + Count : interface
        --
        + GetBooks():List<Book>
        + GetBookById(id:int): Book
        + AddBook(book:Book):void
        + UpdateBook(id:int, book:Book):Book
        + DeleteBook(id:int):void
    }
}
package Services{
    class BookService{
        - bookList:List<Book>
        --
        + Count : int
        --
        + GetBooks():List<Book>
        + GetBookById(id:int): Book
        + AddBook(book:Book):void
        + UpdateBook(id:int, book:Book):Book
        + DeleteBook(id:int):void
    }
    class BookServiceV2{
        - context:RepositoryContext
        --
        + Count : int
        --
        + GetBooks():List<Book>
        + GetBookById(id:int): Book
        + AddBook(book:Book):void
        + UpdateBook(id:int, book:Book):Book
        + DeleteBook(id:int):void
    }
    class BookServiceV3{
        - context:BookRepository
        --
        + Count : int
        --
        + GetBooks():List<Book>
        + GetBookById(id:int): Book
        + AddBook(book:Book):void
        + UpdateBook(id:int, book:Book):Book
        + DeleteBook(id:int):void
        - Validate<T>(T item):void
    }


}

abstract NotFoundException{
    + NotFoundException(message:string)
}
class BookNotFoundException{
    + BookNotFoundException(id:int)
}

BookService .up.|> IBookService : "<<implements>>"
BookServiceV2 .up.|> IBookService : "<<implements>>"
BookServiceV3 .up.|> IBookService : "<<implements>>"

RepositoryContext -up-|> DbContext : "<<extends>>"

BookNotFoundException .up.|> NotFoundException:"<<extends>>"

hide empty members

@enduml